{
	"owner": "jfevd",
	"version": "0.0.0-dev+static.omr",
	"content": "# #############################################\n# Source: common/onemodel-sdk.graphqls\n# #############################################\n\"\"\"\nExecutable directive to specify the date format to use for Date fields in the query response\n\"\"\"\ndirective @dateFormat(format: DateFormat! = ISO8601) on FIELD\n\n\"\"\"\nSchema directive, used to specify the owner of an entity type. This directive must be used on all entity types, only by the owner of the entity, not by subgraph providers which extend the entity.\nUsed for both documenting ownership and enforcing having a single owner.\n\"\"\"\ndirective @owner(\n  \"\"\"\n  JFrog product which is the owner of the type\n  \"\"\"\n  product: String!\n) on SCALAR | OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT\n\n\"\"\"\nSchema directive, used to mark a type or a field as experimental, i.e. not part of the contract and can be removed / changed at any time.\n\"\"\"\ndirective @experimental(\n  \"\"\"\n  Optional comment on the experimental schema item\n  \"\"\"\n  comment: String\n) on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION\n\n\"\"\"\nSupported date formats for Date fields\n\"\"\"\nenum DateFormat @owner(product: \"onemodel\") {\n  \"\"\"\n  ISO-8601 - e.g. 1994-11-05T13:15:30.972Z\n  \"\"\"\n  ISO8601\n  \"\"\"\n  ISO-8601-Date - e.g. 1994-11-05\n  \"\"\"\n  ISO8601_DATE_ONLY\n  \"\"\"\n  e.g. 05 Nov 1994\n  \"\"\"\n  DD_MMM_YYYY\n}\n\n\"\"\"\nPossible directions in which to order a sorted list of items when provided an `orderBy` argument\n\"\"\"\nenum SortOrderDirection @owner(product: \"onemodel\") {\n  \"\"\"\n  Ascending order\n  \"\"\"\n  ASC\n  \"\"\"\n  Descending order\n  \"\"\"\n  DESC\n}\n\n\"\"\"\nDate type, string value, supports the @dateFormat directive, by default follows the [ISO-8601 standard](https://www.w3.org/TR/NOTE-datetime) with millisecond precision and timezone. For example: \"1994-11-05T13:15:30.972Z\"\n\"\"\"\nscalar Date @owner(product: \"onemodel\")\n\n\"\"\"\nUnified Resource Identifier type, string value, follows the [RFC-3986](https://datatracker.ietf.org/doc/html/rfc3986) standard\n\"\"\"\nscalar URI @owner(product: \"onemodel\")\n\n\"\"\"\n[Relay Cursor](https://relay.dev/graphql/connections.htm#sec-Cursor) type, an obfuscated string value representing a position during pagination.\n\"\"\"\nscalar Cursor @owner(product: \"onemodel\")\n\n\"\"\"\nDigest type, string value, in the format: \"\u003calg\u003e:\u003cdigest\u003e\"\nExample:\nsha256:68e656b251e67e8358bef8483ab0d51c6619f3e7a1a9f0e75838d41ff368f728\n\"\"\"\nscalar Digest @owner(product: \"onemodel\")\n\n\"\"\"\nSHA-256 string formatted as HEX value (lowercase).\nMatches regular expression: \"^[a-f0-9]{64}$\".\n\nExample: \"7ab0a6527f661c55b02b29fbb3b7d2a7313215c1140337b0cd980d06c3975a14\" (SHA-256 of \"JFrog\")\n\"\"\"\nscalar Sha256 @owner(product: \"onemodel\")\n\n\"\"\"\nArbitrary JSON object.\n\"\"\"\nscalar JSON @owner(product: \"onemodel\")\n\n\"\"\"\nPage information, part of results pagination, as defined by [Relay PageInfo](https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo) value object type\n\"\"\"\ntype PageInfo @shareable @owner(product: \"onemodel\") {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  The cursor of the first item in the page.\n  Used to continue when paginating backwards (to use with `before`)\n  \"\"\"\n  startCursor: Cursor\n  \"\"\"\n  The cursor of the last item in the page.\n  Used to continue when paginating forwards (to use with `after`)\n  \"\"\"\n  endCursor: Cursor\n}\n\nextend schema\n@link(url: \"https://specs.apollo.dev/federation/v2.9\", import: [\"@key\", \"@shareable\", \"@composeDirective\"])\n@link(url: \"https://jfrog.com/onemodel/v1.0\", import: [\"@owner\", \"@experimental\"])\n@composeDirective(name: \"@owner\")\n@composeDirective(name: \"@experimental\")\n\n\n\n# #############################################\n# Source: evidence.graphqls\n# #############################################\nextend type Query {\n  evidence: EvidenceQueries!\n}\n\n\"\"\"\nQueries for getting evidence.\n\"\"\"\ntype EvidenceQueries @owner(product: \"jfevd\") {\n  \"\"\"\n  Get an evidence by its repository key, path, name, and optional sha256.\n  \"\"\"\n  getEvidence(repositoryKey: String!, path: String!, name: String!, sha256: Sha256): Evidence @goField(forceResolver: true)\n  \"\"\"\n  Search for evidence based on the provided where clause. Where clause consists of repository key, optional path, optional name, and optional sha256.\n  \"\"\"\n  searchEvidence(where: EvidenceWhereInput!, first: Int, after: Cursor): EvidenceConnection @goField(forceResolver: true)\n}\n\n\"\"\"\nWhere clause for searching evidence of subjects that match the given input.\n\"\"\"\ninput EvidenceWhereInput @owner(product: \"jfevd\") {\n  hasSubjectWith: EvidenceSubjectWhereInput!\n}\n\n\"\"\"\nThe desired subjects parameters to search for evidence.\n\"\"\"\ninput EvidenceSubjectWhereInput @owner(product: \"jfevd\") {\n  repositoryKey: String!\n  path: String\n  name: String\n  sha256: Sha256\n}\n\n\"\"\"\nConnection for evidence. Allows pagination over the evidence.\n\"\"\"\ntype EvidenceConnection @owner(product: \"jfevd\") {\n  edges: [EvidenceEdge!]\n  pageInfo: PageInfo!\n  totalCount: Int!\n}\n\n\"\"\"\nEdge for evidence with its cursor in the paginated evidence.\n\"\"\"\ntype EvidenceEdge @owner(product: \"jfevd\") {\n  node: Evidence!\n  cursor: Cursor\n}\n\n\"\"\"\nEvidence represents an artifact (subject) evidence.\n\"\"\"\ntype Evidence @owner(product: \"jfevd\") {\n  downloadPath: String\n  name: String\n  sha256: Sha256\n  repositoryKey: String @deprecated(reason: \"Moved to 'subject.repositoryKey'\")\n  path: String @deprecated(reason: \"This field caused a confusion regarding what it represents. To reach the evidence of an artifact (i.e. for deletion), please do the following concatenation: subject.Path + '/' + subject.Name + '/' + evidence.Name\")\n  subject: EvidenceSubject @experimental(comment: \"The subject field is under development and may change in future versions.\")\n  predicateCategory: String\n  predicateType: String\n  predicateSlug: String\n  predicate: JSON @goField(forceResolver: true)\n  createdAt: Date\n  createdBy: String\n  verified: Boolean\n  signingKey: EvidenceSigningKey\n  providerId: String\n}\n\n\"\"\"\nEvidence subject.\n\"\"\"\ntype EvidenceSubject @owner(product: \"jfevd\") {\n  repositoryKey: String\n  path: String\n  name: String\n  sha256: Sha256\n}\n\n\"\"\"\nEvidence signing key represents the signing key used to sign the evidence.\n\"\"\"\ntype EvidenceSigningKey @owner(product: \"jfevd\") {\n  alias: String\n}\n\n\n# #############################################\n# Source: directives.graphqls\n# #############################################\n\"\"\"\nBuilt-in directive of gqlgen, that make it a little easier to manage wiring.\n\nThis directive is automatically registered to skip_runtime.\nAny directives registered as skip_runtime will not be exposed during introspection\nand are used during code generation only.\n\"\"\"\ndirective @goField(\n  forceResolver: Boolean\n  name: String\n  omittable: Boolean\n) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION\n\n\n\n# #############################################\n# Source: lifecycle.graphqls\n# #############################################\nextend type Query {\n  releaseBundleVersion: ReleaseBundleVersionQueries!\n}\n\n\"\"\"\nQueries for getting release bundle versions.\n\"\"\"\ntype ReleaseBundleVersionQueries @owner(product: \"jfevd\") {\n  \"\"\"\n  Get a release bundle version by its repository key, project key, name, and version.\n  If both repository key and project key are not provided, then repository key release-bundles-v2 will be used.\n  If project key is provided, but not the repository key, then repository key \u003cproject-key\u003e-release-bundles-v2 will be used.\n  If both repository key and project key are provided, the given repository key will be used and the given project key will be ignored.\n  \"\"\"\n  getVersion(repositoryKey: String, projectKey: String, name: String!, version: String!): ReleaseBundleVersion @goField(forceResolver: true)\n}\n\n\"\"\"\nRelease bundle version represents a version of a release bundle.\n\"\"\"\ntype ReleaseBundleVersion @owner(product: \"jfevd\") {\n  createdBy: String\n  createdAt: Date\n  artifactsConnection(first: Int, after: Cursor, where: ReleaseBundleVersionArtifactsWhereInput): ReleaseBundleVersionArtifactConnection @goField(forceResolver: true)\n  evidenceConnection(first: Int, after: Cursor): EvidenceConnection @goField(forceResolver: true)\n  fromBuilds: [ReleaseBundleVersionBuild!]\n}\n\n\"\"\"\nRelease bundle version build represents a build that a release bundle version was created from.\n\"\"\"\ntype ReleaseBundleVersionBuild @owner(product: \"jfevd\") {\n  name: String\n  number: String\n  startedAt: Date\n  repositoryKey: String\n  evidenceConnection(first: Int, after: Cursor): EvidenceConnection @goField(forceResolver: true)\n}\n\n\"\"\"\nConnection for release bundle version artifacts. Allows pagination over the artifacts.\n\"\"\"\ntype ReleaseBundleVersionArtifactConnection @owner(product: \"jfevd\") {\n  edges: [ReleaseBundleVersionArtifactEdge!]\n  pageInfo: PageInfo!\n  totalCount: Int!\n}\n\n\"\"\"\nEdge for release bundle version artifact with its cursor in the paginated artifacts.\n\"\"\"\ntype ReleaseBundleVersionArtifactEdge @owner(product: \"jfevd\") {\n  node: ReleaseBundleVersionArtifact!\n  cursor: Cursor\n}\n\n\"\"\"\nRelease bundle version artifact represents an artifact of a release bundle version.\n\"\"\"\ntype ReleaseBundleVersionArtifact @owner(product: \"jfevd\") {\n  path: String\n  name: String\n  sha256: String\n  sourceRepositoryPath: String\n  packageType: String\n  packageName: String\n  packageVersion: String\n  size: Int\n  properties: [ReleaseBundleVersionArtifactProperty!]\n  evidenceConnection(first: Int, after: Cursor): EvidenceConnection @goField(forceResolver: true)\n}\n\n\"\"\"\nProperty of a release bundle version artifact.\n\"\"\"\ntype ReleaseBundleVersionArtifactProperty @owner(product: \"jfevd\") {\n  key: String\n  values: [String]\n}\n\n\"\"\"\nDefines filtering criteria for querying artifacts based on specified predicates.\n\"\"\"\ninput ReleaseBundleVersionArtifactsWhereInput {\n  hasEvidence: Boolean\n}\n\n\n",
	"endpoint": "/evidence/api/v1/onemodel/graphql"
}